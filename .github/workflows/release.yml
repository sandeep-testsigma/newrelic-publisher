name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --passWithNoTests

    - name: Run linting
      run: npm run lint

    - name: Build project
      run: npm run build

    - name: Create tarball
      run: npm pack

    - name: Get package info
      id: package
      run: |
        echo "name=$(node -p "require('./package.json').name")" >> $GITHUB_OUTPUT
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Installation
          
          Install directly from GitHub:
          ```bash
          npm install git+https://github.com/${{ github.repository }}.git#${{ github.ref_name }}
          ```
          
          Or add to your package.json:
          ```json
          {
            "dependencies": {
              "${{ steps.package.outputs.name }}": "git+https://github.com/${{ github.repository }}.git#${{ github.ref_name }}"
            }
          }
          ```
          
          ## Changes
          
          See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false

    - name: Upload tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.tgz
        asset_name: ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.tgz
        asset_content_type: application/gzip 